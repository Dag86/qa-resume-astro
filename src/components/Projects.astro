---
import type { Project } from "../types/resume";

/** Export Props so parent usage is type-checked */
export interface Props { projects: Project[] }

const { projects } = Astro.props as Props;
---

<section id="projects" aria-labelledby="proj-h">
  <h2 id="proj-h" class="section-title">Projects</h2>

  <div style="display:grid; gap:1rem; grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));">
    {projects.map((p: Project) => (
      <article class="card" data-testid="project-card">
        <h3 style="margin-top:0">{p.name}</h3>

        {/* matches your schema */}
        <p class="muted">{p.description}</p>
        {p.impact && <p><strong>Impact:</strong> {p.impact}</p>}

        {/* techStack chips */}
        {p.techStack?.length ? (
          <div class="chips" style="margin-top:.5rem;">
            {p.techStack.map((s: string) => <span class="chip">{s}</span>)}
          </div>
        ) : null}

        {/* focus chips */}
        {p.focus?.length ? (
          <div class="chips" style="margin-top:.5rem;">
            {p.focus.map((f: string) => <span class="chip">{f}</span>)}
          </div>
        ) : null}
      </article>
    ))}
  </div>
</section>
